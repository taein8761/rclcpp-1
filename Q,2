pub1_2.cpp

#include "rclcpp/rclcpp.hpp"
#include "geometry_msgs/msg/vector3.hpp"
#include <iostream>

class PublisherNode : public rclcpp::Node
{
public:
    PublisherNode() : Node("publisher_node")
    {
        // Publisher 생성
        publisher_ = this->create_publisher<geometry_msgs::msg::Vector3>("topic_pub1", 10);
        
        // 타이머 설정: 1초마다 퍼블리시
        timer_ = this->create_wall_timer(
            std::chrono::seconds(1),
            [this]() {
                // 사용자로부터 실수값 3개 입력 받기
                float x, y, z;
                std::cout << "Enter 3 float values (x, y, z): ";
                std::cin >> x >> y >> z;
                
                auto message = geometry_msgs::msg::Vector3();
                message.x = x;
                message.y = y;
                message.z = z;
                
                RCLCPP_INFO(this->get_logger(), "Publishing: x=%f, y=%f, z=%f", message.x, message.y, message.z);
                
                // 퍼블리시
                publisher_->publish(message);
            });
    }

private:
    rclcpp::Publisher<geometry_msgs::msg::Vector3>::SharedPtr publisher_;
    rclcpp::TimerBase::SharedPtr timer_;
};

int main(int argc, char * argv[])
{
    rclcpp::init(argc, argv);  // ROS2 초기화
    rclcpp::spin(std::make_shared<PublisherNode>());  // PublisherNode 실행
    rclcpp::shutdown();  // 종료
    return 0;
}

CMakeLists.txt
cmake_minimum_required(VERSION 3.16)
project(pub1_2)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(geometry_msgs REQUIRED)  # geometry_msgs 의존성 추가

# 실행 파일 추가
add_executable(pub1_2 src/pub1_2.cpp)  # 실행 파일 이름을 pub1_2로 설정

# 타겟 링크
ament_target_dependencies(pub1_2 rclcpp geometry_msgs)  # geometry_msgs 의존성 추가

# 설치
install(TARGETS
  pub1_2  # 설치할 파일 이름 pub1_2로 설정
  DESTINATION lib/${PROJECT_NAME})

ament_package()
